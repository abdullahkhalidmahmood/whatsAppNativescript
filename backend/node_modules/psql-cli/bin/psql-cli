#!/usr/bin/env node

const pg = require('pg');
const { Client } = pg;
const readline = require('readline');
const path = require('path');
const asciitable = require('asciitable');

const { isCommand, runCommand } = require(path.join(__dirname, '../lib/commands'));

const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout
});

const connectionString = process.argv[2];

function readLoop(prompt = '=# ') {
  rl.question(prompt, async (text) => {
    try {
      const result = await processLoop(text);
      const table = asciitable(result);
      console.log(table);
    } catch (e) {
      console.error(e);
    } finally {
      readLoop(prompt);
    }
  });
}

let client;

async function processLoop(text) {
  if (isCommand(text)) {
    return await runCommand(text, client);
  }
  const res = await client.query(text);
  return res.rows;
}

(async function main() {
  client = new Client(connectionString);
  await client.connect();
  const { rows: [{current_database}] } = await client.query('select current_database()');
  readLoop(`${current_database}=# `);
})();
